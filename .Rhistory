# keep a list of the packages used in this script
packages <- c("tidyverse","rio","jmv")
# check each of the packages in the list and install them if they're not installed already
for (i in packages){
if(! i %in% installed.packages()){
install.packages(i,dependencies = TRUE)
}
# show each package that is checked
print(i)
}
# load each package into memory so it can be used in the script
for (i in packages){
library(i,character.only=TRUE)
# show each package that is loaded
print(i)
}
# Using the file.choose() command allows you to select a file to import from another folder.
#dataset <- rio::import(file.choose())
# This command will allow us to import a file included in our project folder.
dataset <- rio::import("Eels.sav")
# Using the file.choose() command allows you to select a file to import from another folder.
#dataset <- rio::import(file.choose())
# This command will allow us to import a file included in our project folder.
dataset <- rio::import("Eel.sav")
# Make factors
dataset <- dataset %>% mutate(Cured_f = as.factor(Cured))
levels(dataset$Cured_f)
dataset <- dataset %>% mutate(Intervention_f = as.factor(Intervention))
levels(dataset$Intervention_f)
modelLog <- glm(Cured_f ~ Intervention_f + Duration, data = dataset, family = binomial)
round(coef(modelLog), 1)
summary(modelLog)
confint(modelLog)
deviance(modelLog)
output = jmv::logRegBin(
data = dataset,
dep = Cured,
covs = Duration,
factors = Intervention,
blocks = list(
list(
"Intervention",
"Duration")),
refLevels = list(
list(
var="Cured",
ref="0"),
list(
var="Intervention",
ref="0")),
modelTest = TRUE,
bic = TRUE,
pseudoR2 = c("r2mf", "r2cs", "r2n"),
omni = TRUE,
OR = TRUE,
ciOR = TRUE,
class = TRUE,
acc = TRUE,
spec = TRUE,
sens = TRUE,
auc = TRUE,
rocPlot = TRUE,
collin = TRUE)
output
